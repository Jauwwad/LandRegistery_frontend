{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jauww\\\\OneDrive\\\\Desktop\\\\Land_\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await api.get('/auth/profile');\n          setUser(response.data.user);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async credentials => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser(userData);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const demoLogin = async type => {\n    try {\n      // Demo credentials\n      const credentials = type === 'admin' ? {\n        username: 'demo_admin',\n        password: 'admin123'\n      } : {\n        username: 'demo_user',\n        password: 'user123'\n      };\n      const response = await api.post('/auth/login', credentials);\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser(userData);\n      toast.success(`Demo ${type} login successful!`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Demo login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      const {\n        access_token,\n        user: newUser\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser(newUser);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    delete api.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await api.put('/auth/profile', profileData);\n      setUser(response.data.user);\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const changePassword = async passwordData => {\n    try {\n      await api.post('/auth/change-password', passwordData);\n      toast.success('Password changed successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Password change failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  };\n  const isAuthenticated = () => {\n    return !!user && !!token;\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    demoLogin,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    isAdmin,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"V8bE6DZSV5/nB2UMC4Uofie15PA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","checkAuth","response","get","data","error","console","logout","login","credentials","post","access_token","userData","setItem","success","_error$response","_error$response$data","message","demoLogin","type","username","password","_error$response2","_error$response2$data","register","newUser","_error$response3","_error$response3$data","removeItem","updateProfile","profileData","put","_error$response4","_error$response4$data","changePassword","passwordData","_error$response5","_error$response5$data","isAdmin","role","isAuthenticated","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jauww/OneDrive/Desktop/Land_/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport api from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await api.get('/auth/profile');\n          setUser(response.data.user);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, [token]);\n\n  const login = async (credentials) => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      const { access_token, user: userData } = response.data;\n      \n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser(userData);\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const demoLogin = async (type) => {\n    try {\n      // Demo credentials\n      const credentials = type === 'admin' \n        ? { username: 'demo_admin', password: 'admin123' }\n        : { username: 'demo_user', password: 'user123' };\n      \n      const response = await api.post('/auth/login', credentials);\n      const { access_token, user: userData } = response.data;\n      \n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser(userData);\n      \n      toast.success(`Demo ${type} login successful!`);\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Demo login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      const { access_token, user: newUser } = response.data;\n      \n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser(newUser);\n      \n      toast.success('Registration successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Registration failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    delete api.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await api.put('/auth/profile', profileData);\n      setUser(response.data.user);\n      toast.success('Profile updated successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Profile update failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const changePassword = async (passwordData) => {\n    try {\n      await api.post('/auth/change-password', passwordData);\n      toast.success('Password changed successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Password change failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const isAdmin = () => {\n    return user?.role === 'admin';\n  };\n\n  const isAuthenticated = () => {\n    return !!user && !!token;\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    demoLogin,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    isAdmin,\n    isAuthenticated,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}